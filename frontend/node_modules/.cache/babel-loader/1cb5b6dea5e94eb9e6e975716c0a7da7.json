{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils'; // Browser shims.\n\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim'; // Shimming starts here.\n\nexport function adapterFactory() {\n  let {\n    window\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true\n  };\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  }; // Shim browser if found.\n\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection || !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming chrome.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = chromeShim; // Must be called before shimPeerConnection.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection || !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming firefox.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = firefoxShim; // Must be called before shimPeerConnection.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming edge.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = edgeShim;\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails); // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming safari.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = safariShim; // Must be called before shimCallbackAPI.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}","map":{"version":3,"names":["utils","chromeShim","edgeShim","firefoxShim","safariShim","commonShim","adapterFactory","window","options","shimChrome","shimFirefox","shimEdge","shimSafari","logging","log","browserDetails","detectBrowser","adapter","extractVersion","disableLog","disableWarnings","browser","shimPeerConnection","version","browserShim","shimAddIceCandidateNullOrEmpty","shimGetUserMedia","shimMediaStream","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimGetStats","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRTCIceCandidate","shimConnectionState","shimMaxMessageSize","shimSendThrowTypeError","removeExtmapAllowMixed","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimAddTransceiver","shimGetParameters","shimCreateOffer","shimCreateAnswer","shimGetDisplayMedia","shimReplaceTrack","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimAudioContext"],"sources":["C:/Users/Camillo/Desktop/pettochat/frontend/node_modules/webrtc-adapter/src/js/adapter_factory.js"],"sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}