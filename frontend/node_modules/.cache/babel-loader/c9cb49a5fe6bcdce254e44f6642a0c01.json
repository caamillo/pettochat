{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport { filterIceServers } from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    } // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n\n\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n\n      });\n    }\n  } // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n\n\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n\n        return this._dtmf;\n      }\n\n    });\n  } // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n\n\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window, browserDetails.version);\n\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers, browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n\n    return new RTCPeerConnectionShim(config);\n  };\n\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender && !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack = window.RTCRtpSender.prototype.setTrack;\n  }\n}","map":{"version":3,"names":["utils","filterIceServers","shimRTCPeerConnection","shimGetUserMedia","shimGetDisplayMedia","shimPeerConnection","window","browserDetails","RTCIceGatherer","RTCIceCandidate","args","RTCSessionDescription","version","origMSTEnabled","Object","getOwnPropertyDescriptor","MediaStreamTrack","prototype","defineProperty","set","value","call","ev","Event","enabled","dispatchEvent","RTCRtpSender","get","_dtmf","undefined","track","kind","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","RTCPeerConnection","config","iceServers","log","shimReplaceTrack","replaceTrack","setTrack"],"sources":["/Users/diaskywashi/Desktop/pettochat/frontend/node_modules/webrtc-adapter/src/js/edge/edge_shim.js"],"sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}