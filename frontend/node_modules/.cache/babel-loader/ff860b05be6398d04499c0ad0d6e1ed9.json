{"ast":null,"code":"var _jsxFileName = \"/Users/diaskywashi/Desktop/pettochat/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\n// React\nimport { useState, useEffect, useRef } from 'react'; // Tailwind\n\nimport './tailwind/tailwind.css';\nimport './tailwind/output.css'; // Socket\n\nimport io from 'socket.io-client'; // Peerjs\n\nimport { Peer } from \"peerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videos = [];\n\nconst addVideoStream = (video, stream) => {\n  video.srcObject = stream;\n  video.addEventListener('loadedmetadata', () => {\n    video.play();\n  });\n  videos.push(video);\n  console.log(videos);\n};\n\nfunction App() {\n  _s();\n\n  const [uid, setUid] = useState();\n  const [roomId, setRoomId] = useState();\n  const myVid = useRef();\n  const [myStream, setMyStream] = useState();\n  const usrsVid = [];\n  const socket = io('/');\n  const myPeer = new Peer(undefined, {\n    host: '/',\n    port: '5001'\n  });\n  const peers = {}; // Init myVid\n\n  useEffect(() => {\n    const myVideoSource = document.createElement('video');\n    myVideoSource.ref = myVid;\n    myVideoSource.muted = true;\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setMyStream(stream);\n      addVideoStream(myVideoSource, stream);\n    });\n  }, []);\n  useEffect(() => {\n    // get UID and ROOMID\n    if (localStorage.getItem('roomId') != null && localStorage.getItem('uid') != null) {\n      setUid(localStorage.getItem('uid'));\n      setRoomId(localStorage.getItem('roomId'));\n    } else {// Fetch from server\n    }\n\n    if (uid == null || roomId == null) console.log('Error Room / UID', uid, roomId);\n  }, []);\n  useEffect(() => {\n    const videosDisplayed = document.getElementsByTagName('video');\n    let c = 0;\n\n    for (const vid of videosDisplayed) {\n      console.log('update videos');\n      console.log(videos[c].srcObject);\n      vid.srcObject = videos[c].srcObject;\n      c += 1;\n    }\n  }, [videos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"video-grid\",\n      className: \"grid grid-cols-2 gap-4\",\n      children: videos.map(v => /*#__PURE__*/_jsxDEV(\"video\", {}, v.srcObject.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"s9i1JrL9HIo1WRzf9N+Q+gZKQR0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","io","Peer","videos","addVideoStream","video","stream","srcObject","addEventListener","play","push","console","log","App","uid","setUid","roomId","setRoomId","myVid","myStream","setMyStream","usrsVid","socket","myPeer","undefined","host","port","peers","myVideoSource","document","createElement","ref","muted","navigator","mediaDevices","getUserMedia","audio","then","localStorage","getItem","videosDisplayed","getElementsByTagName","c","vid","map","v","id"],"sources":["/Users/diaskywashi/Desktop/pettochat/frontend/src/App.js"],"sourcesContent":["// React\nimport { useState, useEffect, useRef } from 'react'\n\n// Tailwind\nimport './tailwind/tailwind.css'\nimport './tailwind/output.css'\n\n// Socket\nimport io from 'socket.io-client'\n\n// Peerjs\nimport { Peer } from \"peerjs\";\n\nconst videos = []\n\nconst addVideoStream = (video, stream) => {\n    video.srcObject = stream\n    video.addEventListener('loadedmetadata', () => {\n        video.play()\n    })\n    videos.push(video)\n    console.log(videos)\n}\n\nfunction App() {\n\n    const [uid, setUid] = useState()\n    const [roomId, setRoomId] = useState()\n\n    const myVid = useRef()\n    const [myStream, setMyStream] = useState()\n\n    const usrsVid = []\n\n    const socket = io('/')\n    const myPeer = new Peer(undefined, {\n        host: '/',\n        port: '5001'\n    })\n\n    const peers = {}\n\n    // Init myVid\n    useEffect(() => {\n        const myVideoSource = document.createElement('video')\n        myVideoSource.ref = myVid\n        myVideoSource.muted = true\n        navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n        }).then(stream => {\n            setMyStream(stream)\n            addVideoStream(myVideoSource, stream)\n        })\n    }, [])\n\n    useEffect(() => {\n        // get UID and ROOMID\n        if (localStorage.getItem('roomId') != null && localStorage.getItem('uid') != null) {\n            setUid(localStorage.getItem('uid'));\n            setRoomId(localStorage.getItem('roomId'))\n        } else {\n            // Fetch from server\n        }\n\n        if (uid == null || roomId == null) console.log('Error Room / UID', uid, roomId)\n\n    }, [])\n\n    useEffect(() => {\n        const videosDisplayed = document.getElementsByTagName('video')\n        let c = 0\n        for (const vid of videosDisplayed) {\n            console.log('update videos')\n            console.log(videos[c].srcObject)\n            vid.srcObject = videos[c].srcObject\n            c += 1\n        }\n    }, [videos])\n\n    return (\n        <div className='h-full flex items-center justify-center'>\n            <div id=\"video-grid\" className='grid grid-cols-2 gap-4'>\n                { videos.map(v => <video key={ v.srcObject.id }></video>) }\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}